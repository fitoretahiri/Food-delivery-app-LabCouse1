{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nvar _definitions = require(\"../definitions\");\n\nvar _validate = require(\"../validators/validate\");\n\nfunction builder() {\n  const type = this;\n  const keys = _definitions.BUILDER_KEYS[type];\n  const countArgs = arguments.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);\n  }\n\n  const node = {\n    type\n  };\n\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    const field = _definitions.NODE_FIELDS[type][key];\n    let arg;\n    if (i < countArgs) arg = arguments[i];\n\n    if (arg === undefined) {\n      arg = Array.isArray(field.default) ? [] : field.default;\n    }\n\n    node[key] = arg;\n  }\n\n  for (const key in node) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","builder","_definitions","require","_validate","type","keys","BUILDER_KEYS","countArgs","arguments","length","Error","node","i","key","field","NODE_FIELDS","arg","undefined","Array","isArray"],"sources":["C:/Users/Arber/Documents/GitHub/Food-delivery-app-LabCouse1/Food-delivery-app-LabCouse1/front-end-code/node_modules/@babel/types/lib/builders/builder.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = builder;\r\n\r\nvar _definitions = require(\"../definitions\");\r\n\r\nvar _validate = require(\"../validators/validate\");\r\n\r\nfunction builder() {\r\n  const type = this;\r\n  const keys = _definitions.BUILDER_KEYS[type];\r\n  const countArgs = arguments.length;\r\n\r\n  if (countArgs > keys.length) {\r\n    throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);\r\n  }\r\n\r\n  const node = {\r\n    type\r\n  };\r\n\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    const key = keys[i];\r\n    const field = _definitions.NODE_FIELDS[type][key];\r\n    let arg;\r\n    if (i < countArgs) arg = arguments[i];\r\n\r\n    if (arg === undefined) {\r\n      arg = Array.isArray(field.default) ? [] : field.default;\r\n    }\r\n\r\n    node[key] = arg;\r\n  }\r\n\r\n  for (const key in node) {\r\n    (0, _validate.default)(node, key, node[key]);\r\n  }\r\n\r\n  return node;\r\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AAEA,SAASF,OAAT,GAAmB;EACjB,MAAMI,IAAI,GAAG,IAAb;EACA,MAAMC,IAAI,GAAGJ,YAAY,CAACK,YAAb,CAA0BF,IAA1B,CAAb;EACA,MAAMG,SAAS,GAAGC,SAAS,CAACC,MAA5B;;EAEA,IAAIF,SAAS,GAAGF,IAAI,CAACI,MAArB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAW,GAAEN,IAAK,yCAAwCG,SAAU,iCAAgCF,IAAI,CAACI,MAAO,EAAhH,CAAN;EACD;;EAED,MAAME,IAAI,GAAG;IACXP;EADW,CAAb;;EAIA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACI,MAAzB,EAAiC,EAAEG,CAAnC,EAAsC;IACpC,MAAMC,GAAG,GAAGR,IAAI,CAACO,CAAD,CAAhB;IACA,MAAME,KAAK,GAAGb,YAAY,CAACc,WAAb,CAAyBX,IAAzB,EAA+BS,GAA/B,CAAd;IACA,IAAIG,GAAJ;IACA,IAAIJ,CAAC,GAAGL,SAAR,EAAmBS,GAAG,GAAGR,SAAS,CAACI,CAAD,CAAf;;IAEnB,IAAII,GAAG,KAAKC,SAAZ,EAAuB;MACrBD,GAAG,GAAGE,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACf,OAApB,IAA+B,EAA/B,GAAoCe,KAAK,CAACf,OAAhD;IACD;;IAEDY,IAAI,CAACE,GAAD,CAAJ,GAAYG,GAAZ;EACD;;EAED,KAAK,MAAMH,GAAX,IAAkBF,IAAlB,EAAwB;IACtB,CAAC,GAAGR,SAAS,CAACJ,OAAd,EAAuBY,IAAvB,EAA6BE,GAA7B,EAAkCF,IAAI,CAACE,GAAD,CAAtC;EACD;;EAED,OAAOF,IAAP;AACD"},"metadata":{},"sourceType":"script"}