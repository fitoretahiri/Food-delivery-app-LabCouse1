{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = require(\"../validators/isNode\");\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","assertNode","_isNode","require","node","_node$type","type","JSON","stringify","TypeError"],"sources":["C:/Users/Arber/Documents/GitHub/Food-delivery-app-LabCouse1/Food-delivery-app-LabCouse1/front-end-code/node_modules/@babel/types/lib/asserts/assertNode.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = assertNode;\r\n\r\nvar _isNode = require(\"../validators/isNode\");\r\n\r\nfunction assertNode(node) {\r\n  if (!(0, _isNode.default)(node)) {\r\n    var _node$type;\r\n\r\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\r\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\r\n  }\r\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AAEA,SAASF,UAAT,CAAoBG,IAApB,EAA0B;EACxB,IAAI,CAAC,CAAC,GAAGF,OAAO,CAACF,OAAZ,EAAqBI,IAArB,CAAL,EAAiC;IAC/B,IAAIC,UAAJ;;IAEA,MAAMC,IAAI,GAAG,CAACD,UAAU,GAAGD,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACE,IAA3C,KAAoD,IAApD,GAA2DD,UAA3D,GAAwEE,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAArF;IACA,MAAM,IAAIK,SAAJ,CAAe,6BAA4BH,IAAK,GAAhD,CAAN;EACD;AACF"},"metadata":{},"sourceType":"script"}